# Compose file for frontent developers or for everyone else that needs the full stack up and running

version: '3'

services:
  company-agent:
    build:
      context: .
    # image: ${BPA_DOCKER_IMAGE}
    depends_on:
      - aca-py
    environment:
      JAVA_OPTS: >
        -Doagent.acapy.url=http://aca-py:${AGENT_ADMIN_PORT} 
        -Doagent.acapy.apiKey=${ACAPY_ADMIN_URL_API_KEY}
        -Dmicronaut.security.enabled=${BPA_SECURITY_ENABLED} 
        -Dmicronaut.server.port=${BPA_PORT}
        -Doagent.pg.url=jdbc:postgresql://${POSTGRESQL_WALLET_HOST}/${POSTGRESQL_WALLET_USER} 
        -Doagent.pg.username=${POSTGRESQL_WALLET_USER} 
        -Doagent.pg.password=${POSTGRESQL_WALLET_PASSWORD} 
        -Doagent.host=${BPA_HOST}
      BPA_WEB_MODE: ${BPA_WEB_MODE}
      BPA_RESOLVER_URL: ${BPA_RESOLVER_URL}
      BPA_LEDGER_BROWSER: ${BPA_LEDGER_BROWSER}
      BPA_DID_PREFIX: ${BPA_DID_PREFIX}
      BPA_BOOTSTRAP_UN: ${BPA_BOOTSTRAP_UN}
      BPA_BOOTSTRAP_PW: ${BPA_BOOTSTRAP_PW}
    ports:
      - ${BPA_PORT}:${BPA_PORT}
    restart: always
  aca-py:
    image: bcgovimages/aries-cloudagent:py36-1.15-0_0.5.5-beta1
    ports:
      - ${AGENT_ADMIN_PORT}:${AGENT_ADMIN_PORT}
      - ${AGENT_HTTP_PORT}:${AGENT_HTTP_PORT}
    depends_on:
      - postgres
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 1;
        aca-py start \
        --auto-accept-invites \
        --auto-accept-requests \
        --auto-respond-messages \
        --auto-respond-credential-proposal \
        --auto-respond-credential-offer \
        --auto-respond-credential-request \
        --auto-respond-presentation-proposal \
        --auto-respond-presentation-request \
        --auto-store-credential \
        --auto-verify-presentation \
        --auto-ping-connection \
        --plugin aries_cloudagent.messaging.jsonld \
        --inbound-transport http '0.0.0.0' ${AGENT_HTTP_PORT} \
        --outbound-transport http \
        --endpoint ${AGENT_ENDPOINT} \
        --profile-endpoint ${BPA_PROFILE_ENDPOINT} \
        --webhook-url http://company-agent:${BPA_PORT}/log \
        --genesis-url '${LEDGER_URL}/genesis' \
        --wallet-type 'indy' \
        --wallet-name '${WALLET_DATABASE}' \
        --wallet-key '${WALLET_ENCRYPTION_KEY}' \
        --wallet-storage-type '${WALLET_TYPE}' \
        --wallet-storage-config '{\"url\":\"${POSTGRESQL_WALLET_HOST}:${POSTGRESQL_WALLET_PORT}\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"${POSTGRESQL_WALLET_USER}\",\"password\":\"${POSTGRESQL_WALLET_PASSWORD}\",\"admin_account\":\"${POSTGRESQL_WALLET_USER}\",\"admin_password\":\"${POSTGRESQL_WALLET_PASSWORD}\"}' \
        --seed '${AGENT_SEED}' \
        --admin '0.0.0.0' ${AGENT_ADMIN_PORT} \
        --admin-api-key '${ACAPY_ADMIN_URL_API_KEY}' \
        --label ${AGENT_NAME} \
        --log-level info"
      ]
  postgres:
    image: "postgres:12-alpine"
    environment:
      - POSTGRES_USER=${POSTGRESQL_WALLET_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_WALLET_PASSWORD}
    ports:
      - ${POSTGRESQL_WALLET_PORT}:${POSTGRESQL_WALLET_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data
volumes:
  postgres-data:
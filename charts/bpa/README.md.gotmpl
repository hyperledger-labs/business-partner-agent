{{ template "chart.header" . }}
{{ template "chart.description" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

This chart will install a business partner agent (bpa-core & bpa-acapy) and Postgres.

It will also create the default ingress routes.

## TL;DR

```sh
helm repo add bpa https://hyperledger-labs.github.io/business-partner-agent/
helm repo update
helm upgrade \
	--set bpa.image.repository=myrepo.io/bpa \
	--set bpa.image.tag=latest \
	--set bpa.acapy.agentSeed=12345678901234567890123456789012 \
   	mybpa bpa/bpa -i -n mynamespace --devel
```

## Introduction

This chart bootstraps a business partner agent deployment on a Kubernetes cluster using the Helm package manager. Its default installation comes with PostgreSQL. Ingress can be activated, allowing the agent to communicate with other agents outside the cluster.

## Requirements

- Kubernetes 1.12+
- Docker
- Helm v3.3.4+
- PV provisioner support in the underlying infrastructure (for PostgreSQL persistence)
- If activating Ingress:
  - Ingress controller installed
  - Cert-manager
  - DNS records pointing to your routes  

## Initial preparation

The following steps have to be done only once.

### Clone this git repository

This  is required for the next preparation steps.

```s
git@github.com:hyperledger-labs/business-partner-agent.git
cd business-partner-agent/docker
```

### Create and push docker image

In the future we plan to have bpa image publically available, e.g. on docker hub.
Currently you have to build it on your own and make it available in a registry (one that is reachable by your kubernetes cluster, e.g. docker hub).

Build your image by executing the docker build command and push it to your registry.
E.g.

```s
docker login --username=yourusername --password=yourpassword
docker build -t myrepo.io/bpa:latest .
docker push myrepo.io/bpa:latest
```
See also [docker command line documentation](https://docs.docker.com/engine/reference/commandline/cli/).

### Register a new DID

Use the `./docker/register-did.sh` script to register a new DID on our test network (see also [docker setup](../../docker/README.md))
Just run:

```s
./register-did.sh
```

## Installing the chart

To install the chart with the release name `bpa`, the docker image `myrepo.io/bpa` and the seed `12345678901234567890123456789012` in the namespace `mynamespace`

```sh
helm repo add bpa https://hyperledger-labs.github.io/business-partner-agent/
helm repo update
helm upgrade \
	--set bpa.image.repository=myrepo.io/bpa \
	--set bpa.image.tag=latest \
	--set bpa.acapy.agentSeed=12345678901234567890123456789012 \
   	mybpa bpa/bpa -i -n mynamespace --devel
```

Get the application URL by running the commands returned by helm install, e.g.:
```sh
export POD_NAME=$(kubectl get pods --namespace md -l "app.kubernetes.io/name=bpa-bpacore,app.kubernetes.io/instance=mynamespace" -o jsonpath="{.items[0].metadata.name}")
echo "Visit http://127.0.0.1:8080 to use your application"
kubectl --namespace mynamespace port-forward $POD_NAME 8080:8080
```

This deploys BPA (bpa-core & bpa-acapy) and Postgres on the Kubernetes cluster in the default configuration. The [Values](#Values) section list the parameters that can be configured during installation.

#### Install chart with values file

Alternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart.
Deploying the charts with configured ingress routes could be done e.g. as follows.

Create a yaml file. 
```yaml
cat <<EOT >> values-mybpa.yaml
bpa:
   image:
     repository: myrepo.io/bpa
     tag: latest
   ingress:
     enabled: true
     hosts:
     - host: mybpa.example.com
       paths:
       - /
acapy:
   agentSeed: 12345678901234567890123456789012
   ingress:
     enabled: true
     hosts:
     - host: mybpa-acapy.example.com
       paths:
       - /
EOT
```

Install the chart with the release name `mybpa`, in the namespace `mynamespace`.


```sh
helm upgrade \
	--values values-mybpa.yaml \
   	mybpa bpa/bpa -i -n mynamespace --devel  
```
#### Install multiple bpa instances

> You could easily deploy a second business partner agent like this, e.g. for demo purpose.
> Just use a different helm release name, the seed of another DID and different ingress host names.

#### Install in local development cluster

No special handling, should work the same way as with a remote cluster.
With minikube you would

Install and run minikube (see also minikube [documentation](https://minikube.sigs.k8s.io/docs/start/))
```sh
 curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
 sudo install minikube-linux-amd64 /usr/local/bin/minikube  
 minikube start --vm-driver=docker

```

Install the chart
```sh
helm upgrade \
	--values values-mybpa.yaml \
   	mybpa bpa/bpa -i -n mynamespace --devel  
```

## Uninstalling the Chart

To uninstall/delete the my-release deployment:

```sh
helm delete mybpa
```

The command removes all the Kubernetes components but PVC's associated with the chart and deletes the release.

To delete the PVC's associated with my-release:

```sh
kubectl delete pvc -l release=mybpa
```

Note: Deleting the PVC's will delete postgresql data as well. Please be cautious before doing it.

{{ template "chart.valuesSection" . }}

## Chart dependencies
{{ template "chart.requirementsTable" . }}

## Chart development

### Publish chart(s)

See [publishing docu](../../PUBLISHING.md).

### Documentation 

The chart documentation is generated via `helm-docs` out of a go template.

```sh
cd charts
docker run --rm --volume "$(pwd):/helm-docs" -u $(id -u) jnorwood/helm-docs:latest
```

{{ template "chart.maintainersSection" . }}

{{ template "helm-docs.versionFooter" . }}
micronaut:
  application:
    name: bpa
    instance:
      id: ${random.shortuuid}
  server:
    port: 8080
    cors:
      enabled: true # potential security risk
    idle-timeout: 30m
  security:
    enabled: ${BPA_SECURITY_ENABLED:true}
    authentication: session
    endpoints:
      logout:
        path: /api/logout
        get-allowed: true
    redirect:
      unauthorized:
        url: /user/signin
      login-failure: /user/authFailed
      logout: /user/signin
    intercept-url-map:
      - pattern: /health
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /health/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /**
        access:
          - isAuthenticated()
  session:
    max-inactive-interval: 12h
  router:
    # note also check the AppController
    static-resources:
      swagger:
        enabled: true
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      frontend:
        paths: classpath:public
        mapping: /**
  caches:
    '*':
      maximum-size: 5000
    ur-cache:
      expire-after-write: 300s
    partner-lookup-cache:
      expire-after-write: 180s
    did-lookup-cache:
      expire-after-write: 3600s
    schema-attr-cache:
      expire-after-write: 1d
    schema-label-cache:
      expire-after-write: 1d
    issuer-label-cache:
      expire-after-write: 1d
  executors:
    io:
      type: fixed
      nThreads: 25

endpoints:
  all:
    enabled: false
  health:
    enabled: true
    sensitive: false
    details-visible: AUTHENTICATED

datasources:
  '*':
    url: ${bpa.pg.url}
    driver-class-name: org.postgresql.Driver
    username: ${bpa.pg.username}
    password: ${bpa.pg.password}
    dialect: POSTGRES
    schema: ${bpa.pg.schema}
    initialization-fail-timeout: -1 # wait forever until the db is ready

flyway:
  datasources:
    '*':
      locations: classpath:databasemigrations
      schemas: ${bpa.pg.schema}

jackson:
  serialization-inclusion: NON_ABSENT # Omit null and Optional.empty(), but include empty collections
  serialization:
    indent-output: false
  deserialization:
    failOnUnknownProperties: false
    acceptEmptyStringAsNullObject: true
    acceptEmptyArrayAsNullObject: true
  json-view:
    enabled: true
  mapper:
    acceptCaseInsensitiveEnums: true

bpa:
  docker:
    #host where containers are running: typically localhost but might be an IP as well
    host: localhost
  ledger:
    browser: ${BPA_LEDGER_BROWSER:}
  host: ${BPA_HOST:`localhost:8080`}
  name: ${AGENT_NAME:`Business Partner Agent`}
  scheme: ${BPA_SCHEME:`https`}
  web:
    only: ${BPA_WEB_MODE:false}
  acapy:
    url: ${ACAPY_URL:`http://localhost:8031`}
    apiKey: ${ACAPY_API_KEY:empty}
    endpoint: ${ACAPY_ENDPOINT:`http://localhost:8030`}
  did:
    prefix: 'did:sov:'
  pg:
    url: jdbc:postgresql://${POSTGRESQL_HOST:`localhost`}/${bpa.pg.username}
    username: ${POSTGRESQL_USER:`walletuser`}
    password: ${POSTGRESQL_PASSWORD:`walletpassword`}
    schema: public
  bootstrap:
    username: ${BPA_BOOTSTRAP_UN:admin}
    password: ${BPA_BOOTSTRAP_PW:changeme}
  imprint:
    url: ${BPA_IMPRINT_URL:}
  privacy:
    policy:
      url: ${BPA_PRIVACY_POLICY_URL:}
  creddef:
    revocationRegistrySize: ${BPA_CREDDEF_REVOCATION_REGISTRY_SIZE:3000}
  title: ${BPA_TITLE:`Business Partner Agent`}
  i18n:
    locale: ${BPA_I18N_LOCALE:en}
    fallbackLocale: ${BPA_I18N_FALLBACK_LOCALE:en}
  endorser:
    role: ${BPA_ENDORSER_ROLE:}
# The following is an example on how to override the default ux.
# This shows the current defaults (and appropriate alternate value)
# To override theme, then set themes.light properties (do not use dark theme)
# To override favicon, then need favicon.href property (public/favicon.ico used if property not set)
# To override logo, then need navigation.avatar.agent.default = false and navigation.avatar.agent.src property
# buttons are applied against v-bpa-buttons and determined by the color attribute
#   example: <v-bpa-button color="primary">Primary</v-bpa-button>
#  ux:
# //see components/BpaButton.js
#    buttons:
#      primary:
#        text: false/true
#        outlined: false/true
#      secondary:
#        text: true/true
#        outlined: false/true
# //see plugins/vuetify.js
#    theme:
#      dark: false
#      themes:
#        light:
#          primary: "#4A148C",
#          secondary: "#424242",
#          accent: "#82B1FF",
#          error: "#FF5252",
#          info: "#2196F3",
#          success: "#4CAF50",
#          warning: "#FFC107",
#          // the following are custom and are used as variables in style.scss
#          bgLight: "#FAFAFA",
#          bgLight2: "#ECECEC",
#          font: "#313132",
#          anchor: "#1A5A96",
#          anchorHover: "#3B99FC",
#          icons: "#000000"
# // see App.vue
#    favicon:
#      href: "< uses public/favicon.ico by default, set this to url favicon image id to load an external icon>"
#    navigation:
#      avatar:
#        agent:
#          enabled: true/false
#          default: true/false
#          src: "< url to logo image id when navigation.avatar.agent.default = false >"
#          showName: true/false
#      settings:
#        location: "top"/"bottom"
#      about:
#        enabled: true/false
#      logout:
#        enabled: false/true
#    header:
#      logout:
#        enabled: true/false

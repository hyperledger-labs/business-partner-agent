name: CI/CD

on: 
  pull_request:
    branches:
      - master
  push:
    branches:
      - feature/switchDockerRegistry
    tags:        
      - 'v**'   # Push events to every tag prefixed with v, including hierarchical tags like v1.0/beta

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v14  
        with:
          plugin_groups: '[ "com.spotify" ]' 

#- name: Test with Maven 
#        run: mvn -f backend/pom.xml test spotbugs:check pmd:check

      - name: Prepare docker images
        uses: Surgo/docker-smart-tag-action@v1      
        if: ${{ github.ref == 'refs/heads/feature/switchDockerRegistry' || startsWith(github.ref, 'refs/tags/v') }} 
        id: preparetags
        with:
          default_branch: ${{ github.event.repository.default_branch }}
          tag_with_sha: true  

      - name: Build and publish docker images
        if: ${{ github.ref == 'refs/heads/feature/switchDockerRegistry' || startsWith(github.ref, 'refs/tags/v') }}
        run: |
              function logout {
                docker logout ghcr.io
              }
              trap logout EXIT  
              IN=${{ steps.preparetags.outputs.tag }} 
              IN=${IN//:/ }
              IN=(${IN//,/ })
              TAGSTRING=""
              index=0
              for i in "${IN[@]}"
              do
                TAGSTRING+="-Ddocker.tags.$index=$i "
                let "index += 1"
              done
              echo 
              arrIN=(${IN//,/ })
              echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username ${{ github.actor }} --password-stdin
              mvn -f backend/pom.xml clean install -Pbuild-frontend -DskipTests=true -Dspotbugs.skip=true -Dpmd.skip=true docker:build docker:push -Ddocker.push.registry=ghcr.io -Ddocker.name=hyperledger-labs/business-partner-agent/%a $TAGSTRING